definitions:
  auth_service.ClientPlatform:
    properties:
      id:
        type: string
      name:
        type: string
      project_id:
        type: string
      subdomain:
        type: string
    type: object
  auth_service.ClientType:
    properties:
      confirm_by:
        type: integer
      id:
        type: string
      name:
        type: string
      project_id:
        type: string
      self_recover:
        type: boolean
      self_register:
        type: boolean
    type: object
  auth_service.CreateUserRequest:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  auth_service.GetByCredentialsRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  auth_service.GetUserListResponse:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/auth_service.User'
        type: array
    type: object
  auth_service.LoginResponse:
    properties:
      client_platform:
        $ref: '#/definitions/auth_service.ClientPlatform'
      client_type:
        $ref: '#/definitions/auth_service.ClientType'
      permissions:
        items:
          $ref: '#/definitions/auth_service.Permission'
        type: array
      role:
        $ref: '#/definitions/auth_service.Role'
      sessions:
        items:
          $ref: '#/definitions/auth_service.Session'
        type: array
      token:
        $ref: '#/definitions/auth_service.Token'
      user:
        $ref: '#/definitions/auth_service.User'
      user_found:
        type: boolean
    type: object
  auth_service.Permission:
    properties:
      client_platform_id:
        type: string
      id:
        type: string
      name:
        type: string
      parent_id:
        type: string
    type: object
  auth_service.ResetPasswordRequest:
    properties:
      password:
        type: string
      token:
        type: string
      user_id:
        type: string
    type: object
  auth_service.Role:
    properties:
      client_platform_id:
        type: string
      client_type_id:
        type: string
      id:
        type: string
      name:
        type: string
      project_id:
        type: string
    type: object
  auth_service.Session:
    properties:
      client_platform_id:
        type: string
      client_type_id:
        type: string
      created_at:
        type: string
      data:
        type: string
      expires_at:
        type: string
      id:
        type: string
      integration_id:
        type: string
      ip:
        type: string
      project_id:
        type: string
      role_id:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  auth_service.Token:
    properties:
      access_token:
        type: string
      created_at:
        type: string
      expires_at:
        type: string
      refresh_in_seconds:
        type: integer
      refresh_token:
        type: string
      updated_at:
        type: string
    type: object
  auth_service.UpdateUserRequest:
    properties:
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      username:
        type: string
    type: object
  auth_service.User:
    properties:
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  auth_service.UserWithAuth:
    properties:
      accessToken:
        type: string
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      refreshToken:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  http.Response:
    properties:
      data: {}
      description:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
  description: This is a api gateway
paths:
  /login-user:
    post:
      consumes:
      - application/json
      description: Login User
      operationId: login_user
      parameters:
      - description: username
        in: query
        name: username
        required: true
        type: string
      - description: password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.GetByCredentialsRequest'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Login User
      tags:
      - User
  /register-user:
    post:
      consumes:
      - application/json
      description: Register User
      operationId: register_user
      parameters:
      - description: CreateUserRequestBody
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth_service.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.UserWithAuth'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Register User
      tags:
      - User
  /user:
    get:
      consumes:
      - application/json
      description: Get User List
      operationId: get_user_list
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      - description: client-platform-id
        in: query
        name: client-platform-id
        type: string
      - description: client-type-id
        in: query
        name: client-type-id
        type: string
      - description: project-id
        in: query
        name: project-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetUserListResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.GetUserListResponse'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get User List
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create User
      operationId: create_user
      parameters:
      - description: CreateUserRequestBody
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth_service.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.User'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update User
      operationId: update_user
      parameters:
      - description: UpdateUserRequestBody
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth_service.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.User'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update User
      tags:
      - User
  /user/{user-id}:
    delete:
      consumes:
      - application/json
      description: Get User
      operationId: delete_user
      parameters:
      - description: user-id
        in: path
        name: user-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get User By ID
      operationId: get_user_by_id
      parameters:
      - description: user-id
        in: path
        name: user-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: UserBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.User'
              type: object
        "400":
          description: Invalid Argument
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get User By ID
      tags:
      - User
  /user/reset-password:
    put:
      consumes:
      - application/json
      description: Reset Password
      operationId: reset_password
      parameters:
      - description: ResetPasswordRequestBody
        in: body
        name: reset_password
        required: true
        schema:
          $ref: '#/definitions/auth_service.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update User
      tags:
      - User
swagger: "2.0"
